//#############################################################################
// \file f2837x/F2837x_internal_testcases/CLA/asin/asin.cla
//
// \brief  Arc Sine Example
// \author Vishal Coelho
// \date   Apr 8, 2013
//
//
//  Group:             C2000
//  Target Family:    F2837xS
//
//#############################################################################
// $TI Release: F2837xS Support Library v210 $
// $Release Date: Tue Nov  1 15:35:23 CDT 2016 $
// $Copyright: Copyright (C) 2014-2016 Texas Instruments Incorporated -
//             http://www.ti.com/ ALL RIGHTS RESERVED $
//#############################################################################

//
// Included Files
//
#include "cla_asin_shared.h"

//
// Defines
//

//
// Globals
//

//
// Function Definitions
//
//Task 1 : Calculate asin(X)
// Description:
//             Step(1): Calculate absolute of the input X
//
//             Step(2):   Use the upper 6-bits of input "X" value as an
//                          index into the table to obtain the coefficients
//                          for a second order equation:
//
//                        _FPUasinTable:
//                             CoeffA0[0]
//                             CoeffA1[0]
//                             CoeffA2[0]
//                                .
//                                .
//                             CoeffA0[63]
//                             CoeffA1[63]
//                             CoeffA2[63]
//
//             Step(3):   Calculate the angle using the following equation:
//
//                        arctan(Ratio) = A0 + A1*Ratio + A2*Ratio*Ratio
//                        arctan(Ratio) = A0 + Ratio(A1 + A2*Ratio)
//
//             Step(4):   The final angle is determined as follows:
//
//                        if( X < 0 )
//                            Angle = -Angle
__interrupt void Cla1Task1 ( void )
{
    //
    //Local Variables
    //
    int xTblIdx; //integer valued Table index
    float A0,A1,A2; //Table coefficients
    float *entry;
    float result;

    //
    //Preprocessing
    //
    __mdebugstop();
    xTblIdx = fVal * TABLE_SIZE_M_1; //convert table index to u16-bits
    xTblIdx = xTblIdx * 3; //Table is ordered as 3 32-bit coefficients, the
                           //index points to these triplets, hence the *3*sizeof(float)
    entry = &CLAasinTable[xTblIdx];
    A0 = *entry++;
    A1 = *entry++;
    A2 = *entry;


    result = A0 + fVal*(A1 + A2*fVal);

    //
    //Post processing
    //
    if(fVal < 0)
    {
        result = - result;
    }

    fResult = result;
}

interrupt void Cla1Task2 ( void )
{

}

interrupt void Cla1Task3 ( void )
{

}

interrupt void Cla1Task4 ( void )
{

}

interrupt void Cla1Task5 ( void )
{

}

interrupt void Cla1Task6 ( void )
{

}

interrupt void Cla1Task7 ( void )
{

}

interrupt void Cla1Task8 ( void )
{

}

//
// End of file
//
