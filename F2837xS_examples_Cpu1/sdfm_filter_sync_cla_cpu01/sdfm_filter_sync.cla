//#############################################################################
//  \file sdfm_filter_sync.cla
//
//  \brief  SDFM filter sync
//  \author
//  \date
//
//
//  Group:             C2000
//  Target Family:    F2837xS
//
//#############################################################################
// $TI Release: F2837xS Support Library v210 $
// $Release Date: Tue Nov  1 15:35:23 CDT 2016 $
// $Copyright: Copyright (C) 2014-2016 Texas Instruments Incorporated -
//             http://www.ti.com/ ALL RIGHTS RESERVED $
//#############################################################################

//
// Included Files
//
#include "cla_sdfm_filter_sync_shared.h"
#include "F2837xS_cla.h"
#include "F2837xS_piectrl.h"
#include "F2837xS_sdfm_drivers.h"
#include "F2837xS_struct.h"

//
// Whether MDEBUGSTOP needs to be compiled or not
//
#define CLA_DEBUG       0
#define PIEACK_GROUP5   0x0010

#pragma DATA_SECTION(Filter1_Result,"Filter1_RegsFile");
#pragma DATA_SECTION(Filter2_Result,"Filter2_RegsFile");
#pragma DATA_SECTION(Filter3_Result,"Filter3_RegsFile");
#pragma DATA_SECTION(Filter4_Result,"Filter4_RegsFile");

short  Filter1_Result[MAX_SAMPLES];
short  Filter2_Result[MAX_SAMPLES];
short  Filter3_Result[MAX_SAMPLES];
short  Filter4_Result[MAX_SAMPLES];

int16 loopCounter1;
int16 loopCounter2;

//
// Task 1
//
__interrupt void Cla1Task1 ( void )
{
#if (CLA_DEBUG==1)
__mdebugstop();
#endif
        Uint32 sdfmReadFlagRegister;

        sdfmReadFlagRegister = Sdfm1Regs.SDIFLG.all;    //Read SDIFLG of SDFM1

        if(loopCounter1<MAX_SAMPLES)
        {
            Filter1_Result[loopCounter1] = *(Uint16 *)((Uint16)0x5E17);
            Filter2_Result[loopCounter1] = *(Uint16 *)((Uint16)0x5E27);
            Filter3_Result[loopCounter1] = *(Uint16 *)((Uint16)0x5E37);
            Filter4_Result[loopCounter1++] = *(Uint16 *)((Uint16)0x5E47);

            Sdfm1Regs.SDIFLGCLR.all = sdfmReadFlagRegister;    //Clear SDFM1.SDIFLG register
        }
        else
        {
            loopCounter1 =0;
        }
}

//
// Task 2
//
__interrupt void Cla1Task2 ( void )
{
#if (CLA_DEBUG==1)
__mdebugstop();
#endif
        Uint32 sdfmReadFlagRegister;

        sdfmReadFlagRegister = Sdfm2Regs.SDIFLG.all;    //Read SDIFLG of SDFM2

        if(loopCounter2<MAX_SAMPLES)
        {
            Filter1_Result[loopCounter2] = *(Uint16 *)((Uint16)0x5E97);
            Filter2_Result[loopCounter2] = *(Uint16 *)((Uint16)0x5EA7);
            Filter3_Result[loopCounter2] = *(Uint16 *)((Uint16)0x5EB7);
            Filter4_Result[loopCounter2++] = *(Uint16 *)((Uint16)0x5EC7);

            Sdfm2Regs.SDIFLGCLR.all = sdfmReadFlagRegister;    //Clear SDFM2.SDIFLG register
        }
        else
        {
            loopCounter2 =0;
        }
}

//
// Task 3
//
__interrupt void Cla1Task3 ( void )
{
    #if (CLA_DEBUG==1)
    __mdebugstop();
    #endif
}

//
// Task 4
//
__interrupt void Cla1Task4 ( void )
{
    #if (CLA_DEBUG==1)
    __mdebugstop();
    #endif
}

//
// Task 5
//
__interrupt void Cla1Task5 ( void )
{
    #if (CLA_DEBUG==1)
    __mdebugstop();
    #endif

}

//
// Task 6
//
__interrupt void Cla1Task6 ( void )
{
    #if (CLA_DEBUG==1)
    __mdebugstop();
    #endif
}

//
// Task 7
//
__interrupt void Cla1Task7 ( void )
{
    #if (CLA_DEBUG==1)
    __mdebugstop();
    #endif
}

//
// Task 8
//
__interrupt void Cla1Task8 ( void )
{
    loopCounter1 = 0;
    loopCounter2 = 0;
}

//
// End of file
//
