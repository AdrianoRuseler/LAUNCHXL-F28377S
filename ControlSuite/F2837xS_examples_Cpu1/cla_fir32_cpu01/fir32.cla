//#############################################################################
// \file \cs30_f2837x\F2837xS_examples_Cpu1\cla_fir32\cpu01\fir32.cla
//
// \brief  5-Tap FIR Filter Example
// \author Tri Thai
// \date   August 2, 2013
//
//
//  Group:             C2000
//  Target Family:    F2837xS
//
//#############################################################################
// $TI Release: F2837xS Support Library v210 $
// $Release Date: Tue Nov  1 15:35:23 CDT 2016 $
// $Copyright: Copyright (C) 2014-2016 Texas Instruments Incorporated -
//             http://www.ti.com/ ALL RIGHTS RESERVED $
//#############################################################################

//
// Included Files
//
#include "cla_fir32_shared.h"

//
// Defines
//

//
// Globals
//
//Variables global to all CLA tasks only
float W2[2]; //w2(n) and w2(n-1)
float W1[2]; //w1(n) and w1(n-1)

//
// Function Definitions
//

//Task 1 : {FILTER_LEN} tap lowpass FIR filter
__interrupt void Cla1Task1 ( void )
{
    //
    //Local Variables
    //
    int i;
    float fTemp = 0;

    __mdebugstop();

    fTemp = 0;

    //
    //Shift the delay line to the right by 1
    //
    #pragma UNROLL(5)
    for(i=FILTER_LEN-1;i>0;i--)
    {
      fDelayLine[i] = fDelayLine[i-1];

      //
      //Multiply coefficients with the delay line and accumulate
      //
      fTemp += fCoeffs[i]*fDelayLine[i];
    }

    //
    //Get adc input into start of the delay line
    //note the adc input is simulated in software
    //
    fDelayLine[0] = (float)xAdcInput; //convert to single precision float
    fTemp += fCoeffs[0]*fDelayLine[0];
    xResult = (int)fTemp;
}

__interrupt void Cla1Task2 ( void )
{

}

__interrupt void Cla1Task3 ( void )
{

}

__interrupt void Cla1Task4 ( void )
{

}

__interrupt void Cla1Task5 ( void )
{

}

__interrupt void Cla1Task6 ( void )
{

}

__interrupt void Cla1Task7 ( void )
{

}

__interrupt void Cla1Task8 ( void )
{

}
//
// End of file
//
